"""init database

Revision ID: a1d1449974e1
Revises: 
Create Date: 2018-06-17 20:16:50.517000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a1d1449974e1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('point_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=32), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('sender_type', sa.String(length=32), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('receiver_type', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=True),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('target_type', sa.String(length=64), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('current', sa.Integer(), nullable=True),
    sa.Column('total', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('group', sa.String(length=80), nullable=True),
    sa.Column('issues_count', sa.Integer(), nullable=True),
    sa.Column('repositories_count', sa.Integer(), nullable=True),
    sa.Column('followers_count', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('bio', sa.String(length=180), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('site_admin', sa.Boolean(), nullable=True),
    sa.Column('avatar_url', sa.String(length=256), nullable=True),
    sa.Column('owner', sa.String(length=32), nullable=False),
    sa.Column('github_id', sa.Integer(), nullable=True),
    sa.Column('github_username', sa.String(length=64), nullable=True),
    sa.Column('github_token', sa.String(length=300), nullable=True),
    sa.Column('password', sa.String(length=300), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('followers_count', sa.Integer(), nullable=True),
    sa.Column('public_repos_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_active_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_reward_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('github_id'),
    sa.UniqueConstraint('github_token'),
    sa.UniqueConstraint('github_username'),
    sa.UniqueConstraint('username')
    )
    op.create_table('repository',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('origin_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('logo_url', sa.String(length=256), nullable=True),
    sa.Column('html_url', sa.String(length=256), nullable=True),
    sa.Column('homepage', sa.String(length=256), nullable=True),
    sa.Column('language', sa.String(length=32), nullable=True),
    sa.Column('pushed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('imported_at', sa.DateTime(), nullable=True),
    sa.Column('imported_from', sa.String(length=16), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_topics',
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('voter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('target_type', sa.String(length=64), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('issue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('origin_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=32), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=False),
    sa.Column('body', sa.String(length=4096), nullable=True),
    sa.Column('body_html', sa.String(length=4096), nullable=True),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('html_url', sa.String(length=256), nullable=False),
    sa.Column('comments_count', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repository_topics',
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('repo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['repo_id'], ['repository.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], )
    )
    op.create_table('issue_topics',
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('issue_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('issue_topics')
    op.drop_table('repository_topics')
    op.drop_table('issue')
    op.drop_table('voter')
    op.drop_table('user_topics')
    op.drop_table('repository')
    op.drop_table('user')
    op.drop_table('topic')
    op.drop_table('task')
    op.drop_table('point_log')
    # ### end Alembic commands ###
